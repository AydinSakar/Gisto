matrix:
  include:
  - os: osx
    osx_image: xcode9.3
    language: node_js
    node_js: "10"
    env:
    - ELECTRON_CACHE=$HOME/.cache/electron
    - ELECTRON_BUILDER_CACHE=$HOME/.cache/electron-builder

  - os: linux
    services: docker
    language: generic

cache:
  directories:
  - node_modules
  - $HOME/.cache/electron
  - $HOME/.cache/electron-builder

before_install:
- |
  if [ "$TRAVIS_OS_NAME" == "osx" ]; then
    mkdir -p /tmp/git-lfs && curl -L https://github.com/github/git-lfs/releases/download/v2.3.1/git-lfs-$([ "$TRAVIS_OS_NAME" == "linux" ] && echo "linux" || echo "darwin")-amd64-2.3.1.tar.gz | tar -xz -C /tmp/git-lfs --strip-components 1
    export PATH="/tmp/git-lfs:$PATH"
  fi

before_script:
- git lfs pull
- echo "GISTO_GITHUB_CLIENT_ID=$GISTO_GITHUB_CLIENT_ID" >> $TRAVIS_BUILD_DIR/.env
- echo "GISTO_GITHUB_CLIENT_SECRET=$GISTO_GITHUB_CLIENT_SECRET" >> $TRAVIS_BUILD_DIR/.env

script:
- |
  if [ "$TRAVIS_OS_NAME" == "linux" ]; then
    docker run --rm \
      --env-file <(env | grep -iE 'DEBUG|NODE_|ELECTRON_|YARN_|NPM_|CI|CIRCLE|TRAVIS|APPVEYOR_|CSC_|_TOKEN|_KEY|AWS_|STRIP|BUILD_') \
      -v ${PWD}:/project \
      -v ~/.cache/electron:/root/.cache/electron \
      -v ~/.cache/electron-builder:/root/.cache/electron-builder \
      electronuserland/builder:wine \
      /bin/bash -c "npm install npm@latest -g && npm ci && npm run test:ci && npm run pack"
  else
    npm ci && npm run test:ci && npm run pack && npm run build:web
  fi

deploy:
  provider: pages
  skip-cleanup: true
  github-token: $GH_TOKEN
  keep-history: true
  local-dir: web
  target-branch: master
  repo: Gisto/web.gistoapp.com
  on:
    branch: master

before_cache:
- rm -rf $HOME/.cache/electron-builder/wine

branches:
  only:
  - master
  - next
