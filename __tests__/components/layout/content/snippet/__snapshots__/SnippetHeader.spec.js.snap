// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`COMPONENTS - <SnippetHeader> render SnippetHeader in edit mode 1`] = `
<SnippetHeader
  deleteFile={[MockFunction]}
  edit={true}
  file={
    Object {
      "filename": "somefile.js",
    }
  }
  snippetId="123123123123"
  tempSnippet={Object {}}
  updateTempSnippet={[MockFunction]}
  username="user"
>
  <ForwardRef>
    <StyledComponent
      forwardedClass={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": undefined,
          "componentStyle": ComponentStyle {
            "componentId": "SnippetHeaderWrapper-sc-1ejil1h-0",
            "isStatic": true,
            "lastClassName": "hmftoh",
            "rules": Array [
              "display:flex;flex:1;padding:0 0 0 20px;border-bottom:1px solid ",
              "#ccc",
              ";border-radius:3px 3px 0 0;line-height:50px;justify-content:space-between;background:",
              "#cfe0e9",
              ";color:",
              "#3F84A8",
              ";",
            ],
          },
          "displayName": "SnippetHeaderWrapper",
          "render": [Function],
          "styledComponentId": "SnippetHeaderWrapper-sc-1ejil1h-0",
          "target": "div",
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="SnippetHeaderWrapper-sc-1ejil1h-0 hmftoh"
      >
        <ForwardRef>
          <StyledComponent
            forwardedClass={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": undefined,
                "componentStyle": ComponentStyle {
                  "componentId": "FileName-sc-1ejil1h-3",
                  "isStatic": true,
                  "lastClassName": "fBRmgg",
                  "rules": Array [
                    "display:flex;align-items:center;",
                  ],
                },
                "displayName": "FileName",
                "render": [Function],
                "styledComponentId": "FileName-sc-1ejil1h-3",
                "target": "div",
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="FileName-sc-1ejil1h-3 fBRmgg"
            >
              <ForwardRef
                color="#3F84A8"
                size={22}
                type="file"
              >
                <StyledComponent
                  color="#3F84A8"
                  forwardedClass={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": undefined,
                      "componentStyle": ComponentStyle {
                        "componentId": "FilenameIcon-sc-1ejil1h-2",
                        "isStatic": false,
                        "lastClassName": "ieNFHY",
                        "rules": Array [
                          "background-color:",
                          [Function],
                          ";display:inline-block;vertical-align:middle;width:",
                          [Function],
                          "px;height:",
                          [Function],
                          "px;-webkit-mask-image:url('src/icons/",
                          [Function],
                          "');-webkit-mask-repeat:no-repeat;-webkit-mask-size:contain;-webkit-mask-position:center;",
                          [Function],
                          " ",
                          [Function],
                          " ",
                          [Function],
                          "margin:0 20px 0 0;",
                        ],
                      },
                      "displayName": "FilenameIcon",
                      "render": [Function],
                      "styledComponentId": "FilenameIcon-sc-1ejil1h-2",
                      "target": "span",
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  size={22}
                  type="file"
                >
                  <span
                    className="FilenameIcon-sc-1ejil1h-2 ieNFHY"
                    color="#3F84A8"
                    size={22}
                    type="file"
                  />
                </StyledComponent>
              </ForwardRef>
               
              <Input
                onChange={[Function]}
              >
                <ForwardRef
                  disabled={false}
                  onChange={[Function]}
                  title=""
                  type="text"
                >
                  <StyledComponent
                    disabled={false}
                    forwardedClass={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": undefined,
                        "componentStyle": ComponentStyle {
                          "componentId": "StyledInput-sc-86zjwb-0",
                          "isStatic": false,
                          "lastClassName": "djdkls",
                          "rules": Array [
                            "border:none;border-radius:0;height:30px;color:",
                            [Function],
                            ";border-bottom:1px solid ",
                            [Function],
                            ";background:",
                            [Function],
                            ";&:focus{outline:none;}::placeholder{color:",
                            [Function],
                            ";opacity:1;}",
                          ],
                        },
                        "displayName": "StyledInput",
                        "render": [Function],
                        "styledComponentId": "StyledInput-sc-86zjwb-0",
                        "target": "input",
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    onChange={[Function]}
                    title=""
                    type="text"
                  >
                    <input
                      className="StyledInput-sc-86zjwb-0 djdkls"
                      disabled={false}
                      onChange={[Function]}
                      title=""
                      type="text"
                    />
                  </StyledComponent>
                </ForwardRef>
              </Input>
               
            </div>
          </StyledComponent>
        </ForwardRef>
        <UtilityIcon
          color="tomato"
          onClick={[Function]}
          size={22}
          type="delete"
        >
          <ForwardRef
            color="tomato"
            onClick={[Function]}
          >
            <StyledComponent
              color="tomato"
              forwardedClass={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": undefined,
                  "componentStyle": ComponentStyle {
                    "componentId": "Util-d02m7m-0",
                    "isStatic": false,
                    "lastClassName": "cxIEpU",
                    "rules": Array [
                      "border-left:1px solid ",
                      "#ccc",
                      ";height:50px;display:inline-block;text-align:center;line-height:50px;color:",
                      [Function],
                      ";cursor:pointer;position:relative;background:",
                      [Function],
                      ";",
                      [Function],
                      " ",
                      [Function],
                      " &:hover{background:",
                      [Function],
                      ";}div.list{",
                      "position:absolute;background:",
                      "#fff",
                      ";right:0;top:51px;border:1px solid ",
                      "#ccc",
                      ";line-height:21px;list-style-type:none;margin:0;padding:0;box-shadow:0 5px 10px ",
                      "#ccc",
                      ";z-index:4;overflow:auto;max-height:60vh;color:",
                      "#3F84A8",
                      ";cursor:default;",
                      ";padding:10px 20px;}ul{",
                      "position:absolute;background:",
                      "#fff",
                      ";right:0;top:51px;border:1px solid ",
                      "#ccc",
                      ";line-height:21px;list-style-type:none;margin:0;padding:0;box-shadow:0 5px 10px ",
                      "#ccc",
                      ";z-index:4;overflow:auto;max-height:60vh;color:",
                      "#3F84A8",
                      ";cursor:default;",
                      " li{border-bottom:1px dotted ",
                      "#ccc",
                      ";margin:0;white-space:nowrap;text-align:left;> *{padding:5px 20px;display:block;}&:hover{background:",
                      "#f2f2f2",
                      ";cursor:pointer;}&:last-child{border:none;}}}",
                    ],
                  },
                  "displayName": "Util",
                  "render": [Function],
                  "styledComponentId": "Util-d02m7m-0",
                  "target": "span",
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
              onClick={[Function]}
            >
              <span
                className="Util-d02m7m-0 cxIEpU"
                color="tomato"
                onClick={[Function]}
              >
                <ForwardRef
                  color="tomato"
                  size={22}
                  type="delete"
                >
                  <StyledComponent
                    color="tomato"
                    forwardedClass={
                      Object {
                        "$$typeof": Symbol(react.forward_ref),
                        "attrs": undefined,
                        "componentStyle": ComponentStyle {
                          "componentId": "Icon-vk4qna-0",
                          "isStatic": false,
                          "lastClassName": "fGamGl",
                          "rules": Array [
                            "background-color:",
                            [Function],
                            ";display:inline-block;vertical-align:middle;width:",
                            [Function],
                            "px;height:",
                            [Function],
                            "px;-webkit-mask-image:url('src/icons/",
                            [Function],
                            "');-webkit-mask-repeat:no-repeat;-webkit-mask-size:contain;-webkit-mask-position:center;",
                            [Function],
                            " ",
                            [Function],
                            " ",
                            [Function],
                          ],
                        },
                        "displayName": "Icon",
                        "render": [Function],
                        "styledComponentId": "Icon-vk4qna-0",
                        "target": "span",
                        "warnTooManyClasses": [Function],
                        "withComponent": [Function],
                      }
                    }
                    forwardedRef={null}
                    size={22}
                    type="delete"
                  >
                    <span
                      className="Icon-vk4qna-0 fGamGl"
                      color="tomato"
                      size={22}
                      type="delete"
                    />
                  </StyledComponent>
                </ForwardRef>
                 
              </span>
            </StyledComponent>
          </ForwardRef>
        </UtilityIcon>
      </div>
    </StyledComponent>
  </ForwardRef>
</SnippetHeader>
`;

exports[`COMPONENTS - <SnippetHeader> render SnippetHeader in view mode 1`] = `
<SnippetHeader
  deleteFile={[MockFunction]}
  edit={false}
  file={
    Object {
      "filename": "somefile.js",
    }
  }
  snippetId="123123123123"
  tempSnippet={Object {}}
  updateTempSnippet={[MockFunction]}
  username="user"
>
  <ForwardRef>
    <StyledComponent
      forwardedClass={
        Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": undefined,
          "componentStyle": ComponentStyle {
            "componentId": "SnippetHeaderWrapper-sc-1ejil1h-0",
            "isStatic": true,
            "lastClassName": "hmftoh",
            "rules": Array [
              "display:flex;flex:1;padding:0 0 0 20px;border-bottom:1px solid ",
              "#ccc",
              ";border-radius:3px 3px 0 0;line-height:50px;justify-content:space-between;background:",
              "#cfe0e9",
              ";color:",
              "#3F84A8",
              ";",
            ],
          },
          "displayName": "SnippetHeaderWrapper",
          "render": [Function],
          "styledComponentId": "SnippetHeaderWrapper-sc-1ejil1h-0",
          "target": "div",
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        }
      }
      forwardedRef={null}
    >
      <div
        className="SnippetHeaderWrapper-sc-1ejil1h-0 hmftoh"
      >
        <ForwardRef>
          <StyledComponent
            forwardedClass={
              Object {
                "$$typeof": Symbol(react.forward_ref),
                "attrs": undefined,
                "componentStyle": ComponentStyle {
                  "componentId": "FileName-sc-1ejil1h-3",
                  "isStatic": true,
                  "lastClassName": "fBRmgg",
                  "rules": Array [
                    "display:flex;align-items:center;",
                  ],
                },
                "displayName": "FileName",
                "render": [Function],
                "styledComponentId": "FileName-sc-1ejil1h-3",
                "target": "div",
                "warnTooManyClasses": [Function],
                "withComponent": [Function],
              }
            }
            forwardedRef={null}
          >
            <div
              className="FileName-sc-1ejil1h-3 fBRmgg"
            >
              <ForwardRef
                color="#3F84A8"
                size={22}
                type="file"
              >
                <StyledComponent
                  color="#3F84A8"
                  forwardedClass={
                    Object {
                      "$$typeof": Symbol(react.forward_ref),
                      "attrs": undefined,
                      "componentStyle": ComponentStyle {
                        "componentId": "FilenameIcon-sc-1ejil1h-2",
                        "isStatic": false,
                        "lastClassName": "ieNFHY",
                        "rules": Array [
                          "background-color:",
                          [Function],
                          ";display:inline-block;vertical-align:middle;width:",
                          [Function],
                          "px;height:",
                          [Function],
                          "px;-webkit-mask-image:url('src/icons/",
                          [Function],
                          "');-webkit-mask-repeat:no-repeat;-webkit-mask-size:contain;-webkit-mask-position:center;",
                          [Function],
                          " ",
                          [Function],
                          " ",
                          [Function],
                          "margin:0 20px 0 0;",
                        ],
                      },
                      "displayName": "FilenameIcon",
                      "render": [Function],
                      "styledComponentId": "FilenameIcon-sc-1ejil1h-2",
                      "target": "span",
                      "warnTooManyClasses": [Function],
                      "withComponent": [Function],
                    }
                  }
                  forwardedRef={null}
                  size={22}
                  type="file"
                >
                  <span
                    className="FilenameIcon-sc-1ejil1h-2 ieNFHY"
                    color="#3F84A8"
                    size={22}
                    type="file"
                  />
                </StyledComponent>
              </ForwardRef>
               
              somefile.js
               
            </div>
          </StyledComponent>
        </ForwardRef>
        <div>
          <ForwardRef>
            <StyledComponent
              forwardedClass={
                Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "attrs": undefined,
                  "componentStyle": ComponentStyle {
                    "componentId": "Language-sc-1ejil1h-1",
                    "isStatic": true,
                    "lastClassName": "jYzGHT",
                    "rules": Array [
                      "padding:0 20px 0 0;font-size:14px;",
                    ],
                  },
                  "displayName": "Language",
                  "render": [Function],
                  "styledComponentId": "Language-sc-1ejil1h-1",
                  "target": "span",
                  "warnTooManyClasses": [Function],
                  "withComponent": [Function],
                }
              }
              forwardedRef={null}
            >
              <span
                className="Language-sc-1ejil1h-1 jYzGHT"
              >
                Plain text
              </span>
            </StyledComponent>
          </ForwardRef>
          <UtilityIcon
            color="#3F84A8"
            dropdown={true}
            size={22}
            type="ellipsis"
          >
            <ForwardRef
              color="#3F84A8"
              onClick={[Function]}
            >
              <StyledComponent
                color="#3F84A8"
                forwardedClass={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": undefined,
                    "componentStyle": ComponentStyle {
                      "componentId": "Util-d02m7m-0",
                      "isStatic": false,
                      "lastClassName": "bNkMyq",
                      "rules": Array [
                        "border-left:1px solid ",
                        "#ccc",
                        ";height:50px;display:inline-block;text-align:center;line-height:50px;color:",
                        [Function],
                        ";cursor:pointer;position:relative;background:",
                        [Function],
                        ";",
                        [Function],
                        " ",
                        [Function],
                        " &:hover{background:",
                        [Function],
                        ";}div.list{",
                        "position:absolute;background:",
                        "#fff",
                        ";right:0;top:51px;border:1px solid ",
                        "#ccc",
                        ";line-height:21px;list-style-type:none;margin:0;padding:0;box-shadow:0 5px 10px ",
                        "#ccc",
                        ";z-index:4;overflow:auto;max-height:60vh;color:",
                        "#3F84A8",
                        ";cursor:default;",
                        ";padding:10px 20px;}ul{",
                        "position:absolute;background:",
                        "#fff",
                        ";right:0;top:51px;border:1px solid ",
                        "#ccc",
                        ";line-height:21px;list-style-type:none;margin:0;padding:0;box-shadow:0 5px 10px ",
                        "#ccc",
                        ";z-index:4;overflow:auto;max-height:60vh;color:",
                        "#3F84A8",
                        ";cursor:default;",
                        " li{border-bottom:1px dotted ",
                        "#ccc",
                        ";margin:0;white-space:nowrap;text-align:left;> *{padding:5px 20px;display:block;}&:hover{background:",
                        "#f2f2f2",
                        ";cursor:pointer;}&:last-child{border:none;}}}",
                      ],
                    },
                    "displayName": "Util",
                    "render": [Function],
                    "styledComponentId": "Util-d02m7m-0",
                    "target": "span",
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                onClick={[Function]}
              >
                <span
                  className="Util-d02m7m-0 bNkMyq"
                  color="#3F84A8"
                  onClick={[Function]}
                >
                  <ForwardRef
                    color="#3F84A8"
                    size={22}
                    type="ellipsis"
                  >
                    <StyledComponent
                      color="#3F84A8"
                      forwardedClass={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": undefined,
                          "componentStyle": ComponentStyle {
                            "componentId": "Icon-vk4qna-0",
                            "isStatic": false,
                            "lastClassName": "iTnoRC",
                            "rules": Array [
                              "background-color:",
                              [Function],
                              ";display:inline-block;vertical-align:middle;width:",
                              [Function],
                              "px;height:",
                              [Function],
                              "px;-webkit-mask-image:url('src/icons/",
                              [Function],
                              "');-webkit-mask-repeat:no-repeat;-webkit-mask-size:contain;-webkit-mask-position:center;",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              [Function],
                            ],
                          },
                          "displayName": "Icon",
                          "render": [Function],
                          "styledComponentId": "Icon-vk4qna-0",
                          "target": "span",
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      size={22}
                      type="ellipsis"
                    >
                      <span
                        className="Icon-vk4qna-0 dQcNAQ"
                        color="#3F84A8"
                        size={22}
                        type="ellipsis"
                      />
                    </StyledComponent>
                  </ForwardRef>
                   
                </span>
              </StyledComponent>
            </ForwardRef>
          </UtilityIcon>
          <UtilityIcon
            color="#3F84A8"
            onClick={[Function]}
            size={22}
            type="arrow-down"
          >
            <ForwardRef
              color="#3F84A8"
              onClick={[Function]}
            >
              <StyledComponent
                color="#3F84A8"
                forwardedClass={
                  Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "attrs": undefined,
                    "componentStyle": ComponentStyle {
                      "componentId": "Util-d02m7m-0",
                      "isStatic": false,
                      "lastClassName": "bNkMyq",
                      "rules": Array [
                        "border-left:1px solid ",
                        "#ccc",
                        ";height:50px;display:inline-block;text-align:center;line-height:50px;color:",
                        [Function],
                        ";cursor:pointer;position:relative;background:",
                        [Function],
                        ";",
                        [Function],
                        " ",
                        [Function],
                        " &:hover{background:",
                        [Function],
                        ";}div.list{",
                        "position:absolute;background:",
                        "#fff",
                        ";right:0;top:51px;border:1px solid ",
                        "#ccc",
                        ";line-height:21px;list-style-type:none;margin:0;padding:0;box-shadow:0 5px 10px ",
                        "#ccc",
                        ";z-index:4;overflow:auto;max-height:60vh;color:",
                        "#3F84A8",
                        ";cursor:default;",
                        ";padding:10px 20px;}ul{",
                        "position:absolute;background:",
                        "#fff",
                        ";right:0;top:51px;border:1px solid ",
                        "#ccc",
                        ";line-height:21px;list-style-type:none;margin:0;padding:0;box-shadow:0 5px 10px ",
                        "#ccc",
                        ";z-index:4;overflow:auto;max-height:60vh;color:",
                        "#3F84A8",
                        ";cursor:default;",
                        " li{border-bottom:1px dotted ",
                        "#ccc",
                        ";margin:0;white-space:nowrap;text-align:left;> *{padding:5px 20px;display:block;}&:hover{background:",
                        "#f2f2f2",
                        ";cursor:pointer;}&:last-child{border:none;}}}",
                      ],
                    },
                    "displayName": "Util",
                    "render": [Function],
                    "styledComponentId": "Util-d02m7m-0",
                    "target": "span",
                    "warnTooManyClasses": [Function],
                    "withComponent": [Function],
                  }
                }
                forwardedRef={null}
                onClick={[Function]}
              >
                <span
                  className="Util-d02m7m-0 bNkMyq"
                  color="#3F84A8"
                  onClick={[Function]}
                >
                  <ForwardRef
                    color="#3F84A8"
                    size={22}
                    type="arrow-down"
                  >
                    <StyledComponent
                      color="#3F84A8"
                      forwardedClass={
                        Object {
                          "$$typeof": Symbol(react.forward_ref),
                          "attrs": undefined,
                          "componentStyle": ComponentStyle {
                            "componentId": "Icon-vk4qna-0",
                            "isStatic": false,
                            "lastClassName": "iTnoRC",
                            "rules": Array [
                              "background-color:",
                              [Function],
                              ";display:inline-block;vertical-align:middle;width:",
                              [Function],
                              "px;height:",
                              [Function],
                              "px;-webkit-mask-image:url('src/icons/",
                              [Function],
                              "');-webkit-mask-repeat:no-repeat;-webkit-mask-size:contain;-webkit-mask-position:center;",
                              [Function],
                              " ",
                              [Function],
                              " ",
                              [Function],
                            ],
                          },
                          "displayName": "Icon",
                          "render": [Function],
                          "styledComponentId": "Icon-vk4qna-0",
                          "target": "span",
                          "warnTooManyClasses": [Function],
                          "withComponent": [Function],
                        }
                      }
                      forwardedRef={null}
                      size={22}
                      type="arrow-down"
                    >
                      <span
                        className="Icon-vk4qna-0 iTnoRC"
                        color="#3F84A8"
                        size={22}
                        type="arrow-down"
                      />
                    </StyledComponent>
                  </ForwardRef>
                   
                </span>
              </StyledComponent>
            </ForwardRef>
          </UtilityIcon>
        </div>
      </div>
    </StyledComponent>
  </ForwardRef>
</SnippetHeader>
`;
